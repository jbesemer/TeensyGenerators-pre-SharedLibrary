#pragma once

#include "Config.h"
#include "AnalogWriter.h"
#include "Waveform.h"

// A Generator takes a Waveform and repeatedly sends its data to a DacOut object

class Generator
{
protected:

	// current waveform being generated by generator
	// generator does NOT own this waveform and will NOT free it
	Waveform* CurrentWaveform = NULL;

	// current analog output channel
	AnalogWriter* Writer;

public:

	Generator(AnalogWriter* writer=NULL) { SetWriter(writer); }

	void Loop() {
		if (CurrentWaveform != NULL)
			CurrentWaveform->Play(Writer);
	}

	Waveform* Get(){ return CurrentWaveform; }
	void Set( Waveform* waveform ){ CurrentWaveform = waveform; }
	void Clear() { CurrentWaveform = NULL; }

	void SetWriter( AnalogWriter* writer ) { Writer = writer; }
	AnalogWriter* GetWriter() { return Writer; }
};

